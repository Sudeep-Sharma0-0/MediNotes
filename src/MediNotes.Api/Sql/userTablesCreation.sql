CREATE TABLE users (
  uuid UUID PRIMARY KEY,                -- UUID generated by backend
  username VARCHAR(255) NOT NULL UNIQUE,
  email VARCHAR(255) NOT NULL UNIQUE,
  created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE users_personal_data (
  user_uuid UUID PRIMARY KEY REFERENCES users(uuid) ON DELETE CASCADE,
  full_name TEXT NOT NULL,
  address TEXT,
  date_of_birth DATE,
  created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE users_password_hashes (
  user_uuid UUID PRIMARY KEY REFERENCES users(uuid) ON DELETE CASCADE,
  hash TEXT NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE user_images (
  id SERIAL PRIMARY KEY,
  user_uuid UUID REFERENCES users(uuid) ON DELETE CASCADE,
  image_path TEXT NOT NULL,
  image_type VARCHAR(50) NOT NULL DEFAULT 'profile',
  created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UNIQUE(user_uuid, image_type)
);

/*ALTER TABLE users_personal_data
  ADD CONSTRAINT fk_users_personal_data_user_uuid
  FOREIGN KEY (user_uuid) REFERENCES users(uuid) ON DELETE CASCADE;

ALTER TABLE users_password_hashes
  ADD CONSTRAINT fk_users_password_hashes_user_uuid
  FOREIGN KEY (user_uuid) REFERENCES users(uuid) ON DELETE CASCADE;

ALTER TABLE user_images
  ADD CONSTRAINT fk_user_images_user_uuid
  FOREIGN KEY (user_uuid) REFERENCES users(uuid) ON DELETE CASCADE;
*/